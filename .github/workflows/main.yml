name: CI
on:
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Set node version
      - uses: actions/setup-node@v2
        with:
          node-version: '12.14.1'
      - name: Set NPM 7
        run: npm install -g npm@7.6.3

      - name: ZIP development protocol
        run: zip Development.netcanvas * -r -0

      - name: Checkout protocol validation
        uses: actions/checkout@v2
        with:
          repository: complexdatacollective/protocol-validation
          path: protocol-validation

      - name: Install protocol validation
        run: |
          cd protocol-validation
          git checkout master
          npm install

      - name: Validate protocol
        run: |
          cd protocol-validation
          npm run validate-protocol ../Development.netcanvas

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./Development.netcanvas
          asset_name: Development.netcanvas
          asset_content_type: application/zip